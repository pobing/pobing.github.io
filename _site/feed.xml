<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
                <title>Pobing&#39;s Blog</title>
                <description>Pobing&#39;s life Share all.</description>
                <link>http://pobing.info</link>
                <atom:link href="http://pobing.info/feed.xml" rel="self" type="application/rss+xml" />
                
                        <item>
                                <title>Cron job in ruby -whenever</title>
                                <description>&lt;p&gt;项目中用了好几个定时任务工具，都会发现问题，最后还是觉得 &lt;a href=&quot;https://github.com/javan/whenever&quot;&gt;whenever&lt;/a&gt; 好用。&lt;/p&gt;

&lt;p&gt;项目中很方便使用，几行命令搞定：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;gem install whenever
cd my/project
wheneverize . #This will create an initial config/schedule.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;example  in my schedule.rb ：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;set :environment_variable, &amp;quot;RACK_ENV&amp;quot;
set :environment, &amp;quot;production&amp;quot;
set :output, &amp;quot;./tmp/logs/cron_log.log&amp;quot;

env :PATH, ENV[&amp;#39;PATH&amp;#39;]

# 不同环境区分
case @environment
when &amp;#39;production&amp;#39;
  every 5.minute do
    rake &amp;#39;paid_online&amp;#39;
    rake &amp;#39;paid_offline&amp;#39;
  end
else
  every 1.minute do
    rake &amp;#39;paid_online&amp;#39;
    rake &amp;#39;paid_offline&amp;#39;
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将计划任务写入 linux crontab，执行&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;whenever -w # 以全路径写入，默认为 生产环境,这种会覆盖原来的文件

=&amp;gt;  */5 * * * * /bin/bash -l -c &amp;#39;cd /Users/jidongdong/Workspace/wendax-api &amp;amp;&amp;amp; RACK_ENV=production bundle exec rake paid_online --silent &amp;gt;&amp;gt; ./tmp/logs/cron_log.log 2&amp;gt;&amp;amp;1&amp;#39;

＃如果想以追加的方式更新 crontab 配置文件，并且设置其他环境变量，只需加上 identifier －i 参数，－s 设置 variables

whenever -i my_project-identifier -s &amp;#39;environment=test&amp;#39;

=&amp;gt; */1 * * * * /bin/bash -l -c &amp;#39;cd /Users/jidongdong/Workspace/wendax-api &amp;amp;&amp;amp; RACK_ENV=test bundle exec rake paid_online --silent &amp;gt;&amp;gt; ./tmp/logs/cron_log.log 2&amp;gt;&amp;amp;1&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更多 &lt;code&gt;whenever --help&lt;/code&gt;&lt;/p&gt;
</description>
                                <pubDate>Fri, 19 Sep 2014 22:51:00 +0000</pubDate>
                                <link>http://pobing.info//%E6%8A%80%E6%9C%AF/2014/09/19/Whenever-user-tip.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E6%8A%80%E6%9C%AF/2014/09/19/Whenever-user-tip.html</guid>
                        </item>
                
                        <item>
                                <title>同步服务器时间</title>
                                <description>&lt;p&gt;两台服务器分别是API 服务器和邮件服务器，两台服务器的通信认证是通过client_id 和 secret 和各自的时间戳来做签名进行认证，这样就得确保两台服务器的时间保持同步，那有什么办法能保持同步呢？&lt;/p&gt;

&lt;p&gt;网上搜索了一下，发现linux 的 ntpdate, (set the date and time via NTP), NTP（Network Time Protocol）, 关于NTP 的更多资料请&lt;a href=&quot;http://baike.baidu.com/view/1872618.htm&quot;&gt;点此&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;ntpdate 使用方法很简单, 后面跟一个网络时间服务器,更多时间服务器需要自己去search：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt; ntpdate asia.pool.ntp.org #台警大授时中心(台湾)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为了让时间定期同步，可以将上面命令放入 crontab 计划任务中，每天凌晨执行：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;0 23 * * * ntpdate asia.pool.ntp.org &amp;gt;&amp;gt; /var/log/ntpdate.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://www.2cto.com/os/201109/103909.html&quot;&gt;http://www.2cto.com/os/201109/103909.html&lt;/a&gt;&lt;/p&gt;
</description>
                                <pubDate>Thu, 28 Aug 2014 21:47:00 +0000</pubDate>
                                <link>http://pobing.info//%E6%8A%80%E6%9C%AF/2014/08/28/Ntpdate-server-time.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E6%8A%80%E6%9C%AF/2014/08/28/Ntpdate-server-time.html</guid>
                        </item>
                
                        <item>
                                <title>ruby 生成可逆验证码</title>
                                <description>&lt;p&gt;项目中要用到邀请码，生成规则是 6为 随机字符（小写字母＋数字），但数据表中不想存这个字段，想根据用户ID 根据不同的算法生成，并且可以加解密。ruby 中可逆的加密算法很少，最后找资料在 stackoverflow 找到了下面的这个&lt;a href=&quot;http://stackoverflow.com/questions/1993147/compressing-a-hex-string-in-ruby-rails&quot;&gt;帖子&lt;/a&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;b36 = &amp;#39;4b3fc1400de0690bf2000001&amp;#39;.hex.to_s(36)
=&amp;gt; &amp;quot;29a6dblglcujcoeboqp&amp;quot;
&amp;#39;%024x&amp;#39; % b36.to_i(36)
=&amp;gt; &amp;quot;4b3fc1400de0690bf2000001&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;于是参考写了下面的方法，根据用户的id，加salt （1000&lt;em&gt;000&lt;/em&gt;0）生成 invite_code&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;# 加密
def encrypt(value)
  salt = 1000_000_0
  encryptd_text = (value.to_i + salt).to_s
  encryptd_text.hex.to_s(36)
end

# 解密
def decrypt(value)
  salt = 1000_000_0
  decryptd_text = &amp;#39;%024x&amp;#39; % value.to_i(36)
  decryptd_text.to_i - salt
end

#加密调用:
user_id = 1
invite_code = encrypt(user_id)
=&amp;gt; &amp;quot;4fti4h&amp;quot;
#解密调用:
user_id = decrypt(invite_code)
 =&amp;gt; &amp;quot;1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;参考: &lt;a href=&quot;http://stackoverflow.com/questions/1993147/compressing-a-hex-string-in-ruby-rails&quot;&gt;http://stackoverflow.com/questions/1993147/compressing-a-hex-string-in-ruby-rails&lt;/a&gt;&lt;/p&gt;
</description>
                                <pubDate>Wed, 06 Aug 2014 15:08:00 +0000</pubDate>
                                <link>http://pobing.info//%E6%8A%80%E6%9C%AF/2014/08/06/Ruby-reversible%EF%BC%8Dcode.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E6%8A%80%E6%9C%AF/2014/08/06/Ruby-reversible%EF%BC%8Dcode.html</guid>
                        </item>
                
                        <item>
                                <title>Redis 在签到功能中的运用</title>
                                <description>&lt;p&gt;前段时间项目做了一个每日签到功能，现在有时间记下当时实现这个需求的思路和技术实现。
这个功能总共做了两版，分别是从两种不同的业务需求实现：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;第一种：每日签到，获取固定积分；&lt;/li&gt;
&lt;li&gt;第二种：类似《节奏大师》游戏那样的签到模式，第一天3分，第二天5分，第三天8分，第7天15分，7天以上每天都是15分，连续签到每天的积分都会比前一天多，但其中只要有一天中断，又会从第1天算起。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;第一种实现很简单，只要处理好用户签到的时间问题就行，重点说说第二种。 第二种，1 ~7 天可获取的积分是可配置的，并没有什么递增规律，只要从配置文件中获取就行，但有几个问题需要解决：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;判断用户当天是第几天签到&lt;/li&gt;
&lt;li&gt;当天签到可获取的分数&lt;/li&gt;
&lt;li&gt;今天有没有签到过&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;先说说传统中用mysql的解决办法：&lt;/p&gt;

&lt;p&gt;创建用户签到表 user_checkin&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;id, running_day(连续签到的天数), user_id,created_at（最后签到时间）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;大概需要下面的流程&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.processon.com/chart_image/53d8a8d50cf223f173de706f.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;看看流程，本身不是很复杂，但判断好多，接下来说说使用 redis 的实现思路。redis 的 setex() 可以设置key 的过期时间，这样就不用判断有效期了。这样就不需要判上面那么多的判断，用户签到保存两个key：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;user:id_checking_day #记录用户连续签到的天数，key过期时间是当天时间到第二天零点
user:id_checked # 记录用户当天是否签到，key过期时间：当天时间到今晚零点
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;流程大概如下:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.processon.com/chart_image/53d8bb430cf223f173deea9c.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;总结：适当时候用redis，实现起来会很简单。&lt;/p&gt;

&lt;p&gt;注： 流程图用&lt;a href=&quot;http://www.processon.com/&quot;&gt;processon&lt;/a&gt; 绘制&lt;/p&gt;
</description>
                                <pubDate>Wed, 30 Jul 2014 15:08:00 +0000</pubDate>
                                <link>http://pobing.info//%E6%8A%80%E6%9C%AF/2014/07/30/Redis%E5%9C%A8%E7%AD%BE%E5%88%B0%E5%8A%9F%E8%83%BD%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E6%8A%80%E6%9C%AF/2014/07/30/Redis%E5%9C%A8%E7%AD%BE%E5%88%B0%E5%8A%9F%E8%83%BD%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8.html</guid>
                        </item>
                
                        <item>
                                <title>Redis 在短信验证码中的运用</title>
                                <description>&lt;p&gt;很多时候都想不到用 &lt;a href=&quot;http://redis.io&quot;&gt;redis&lt;/a&gt;，这次项目中要做给用户发送手机验证码的功能。
一般发送手机验证码也就是以下步骤：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;1.用户获取手机验证码
2.服务器生成验证码（一般是 4-6 位数字），调用第三方发短信接口
3.用户收到验证码的短信后，输入验证码提交
4.服务器验证验证码合法性
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面详细说说以上步骤注意事项：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;步骤1：发短信是调用第三方接口，是要花钱的。用户请求一次发短信接口，1 毛钱就出去了。所以不能让用户一直请求，要对步骤 1 进行请求限制。限制条件假如是： 1次/分钟, 3次/小时
步骤2：服务器生成的验证码要和当前用户关联
步骤3：因为发短信会有时间的延迟，用户好久收不到短信怎么办，多长时间可以重新请求发短信
步骤4：验证码多长时间有效，假如10分钟内有效
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;先说传统的解决办法，假如数据库是 Mysql 要实现上述的需求可以实现，因为要对用户的请求次数进行计数，还要判断验证码的有效期，难点就在此，想想就麻烦。
而且验证码是临时性的，其实不需要存储的。所以这时候就是 redis 发挥特长的时候了。&lt;/p&gt;

&lt;p&gt;redis 的 setex() 可以设置key 的过期时间，这样就不用判断有效期了。接下来简单说说以上4点的实现,基于ruby 语言：&lt;/p&gt;

&lt;p&gt;1.具体的发短信核心代码&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;#加入用户 id=1 的用户请求发端信息接口
  # 获取用户1分钟内请求发短信的次数
  min_hz = redis.get(&amp;quot;1_code_min&amp;quot;)
  # 获取用户 1 小时内请求发短信的次数
  hour_hz = redis.get_hour(&amp;quot;1_code_hour&amp;quot;)
  # 说明1分钟重复请求
  raise &amp;quot;rate_limit_error&amp;quot; if min_hz == 1
  #说明超过1小时请求的次数
  raise &amp;quot;rate_limit_error&amp;quot; if hour_hz &amp;gt;= 3
  #生成6位验证码
  sms_code=(&amp;#39;0&amp;#39;..&amp;#39;9&amp;#39;).to_a.sample(6).join
  #redis 存入用户生成的code，key 为 1_sms_code, 10分钟后过期
  redis.setex(&amp;quot;1_sms_code&amp;quot;,60*10,sms_code)
  # 1小时内第一次设置 key 1_code_min
  redis.setex(&amp;quot;1_code_hour&amp;quot;, 60*60, 1) if min_hz == 0
  #或者对1小时的次数加1
  redis.incr(&amp;quot;1_code_hour&amp;quot;)
  redis.setex(&amp;quot;1_code_hour&amp;quot;, 60*60, 1) if hour_hz == 0 &amp;amp;&amp;amp; hour_hz &amp;lt; 3
  #掉第三方服务发送验证码
  res = send(phone,code)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.整合推立方的发短信服务&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;require &amp;#39;net/http&amp;#39;
#http://tui3.com/Members/doc/page/smssend/
  apikey = &amp;quot;tui3.apikey&amp;quot;
  format = &amp;quot;tui3.format&amp;quot;
  productid = &amp;quot;tui3.productid&amp;quot;
  address = &amp;quot;tui3.address&amp;quot;
  content = &amp;quot;验证码是:#{code}。您验证您的手机号码，请勿向任何人提供您收到的验证码。&amp;quot;
  path = &amp;quot;/api/send/?k=#{apikey}&amp;amp;r=#{format}&amp;amp;p=#{productid}&amp;amp;t=#{phone_num}&amp;amp;c=#{content}&amp;quot;
  response = Net::HTTP.get(address,path)
  res = JSON.parse(response)
  res
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;总结：程序开发中，如果是临时的数据，如验证码，激活码什么的，就没必要存入数据库，可以考虑使用缓存机制 redis，memcached，都是不错的选择！&lt;/p&gt;
</description>
                                <pubDate>Sun, 20 Apr 2014 10:06:00 +0000</pubDate>
                                <link>http://pobing.info//%E6%8A%80%E6%9C%AF/2014/04/20/Redis-%E5%9C%A8%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E6%8A%80%E6%9C%AF/2014/04/20/Redis-%E5%9C%A8%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8.html</guid>
                        </item>
                
                        <item>
                                <title>8个月5次搬家的心路历程（一）</title>
                                <description>&lt;p&gt;&lt;strong&gt;北漂不易，坚持不易，且行且珍惜。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;北漂&lt;/strong&gt;，不必说工作有多难找，不必说吃饭吃了多少地沟油，不必说早晨是怎么被人推进地铁，更不必说每天吸进去多少雾霾，就单单每次那找房就够让你痛苦的！&lt;/p&gt;

&lt;p&gt;2010年4月来的北京，到年底共搬家5次。搬了5次？吹的吧！吹没吹且看下面：&lt;/p&gt;

&lt;p&gt;故事都是发生在2010年，以下省去年份，内容如有雷同，实属故意。&lt;/p&gt;

&lt;pre&gt;
第一次： 4月初，从西安雁塔区——北京万寿路
第二次： 4月底，万寿路——青塔
第三次： 8月底， 青塔 —— 七里渠南村
第四次： 10月中旬，七里渠南村 —— 青塔
第五次： 11月中旬 青塔 —— 天通苑
&lt;/pre&gt;

&lt;p&gt;有模有样，能记得那么清？编的吧。&lt;/p&gt;

&lt;p&gt;不过我只想说，有些事情真实经历了，触动心灵了，就自然而然的记住了。&lt;/p&gt;

&lt;p&gt;下来就说说第一次搬家：&lt;/p&gt;

&lt;p&gt;4月1日，从古都西安坐上了北上的列车。为什么选择愚人节这天，而且是美丽的四月天？ 哈哈，这并没特殊意义，随机事件，实属巧合。记得那天宿舍5，6个兄弟都来西安车站为我送行，多好的哥们，可惜有几个现在都失联了，有点想念，不知过的都还好？&lt;/p&gt;

&lt;p&gt;坐了一晚上的火车，没吃、没喝、也没上厕所，好像也没睡着。这是因为要去帝都激动的吗？当然不是，也许是因为一个人，胆怯的，或是怕谁把东西拿走了？其实也没什么东西，一个皮箱，一包衣服算是这次搬家的东西。这次搬家东西最少，距离最远。有人会说，这怎么能叫搬家？你说不是就不是吧！&lt;/p&gt;

&lt;p&gt;走之前身边的小伙伴问我，你帝都有熟人么？你一个人都敢去？我笑笑说，北京咱哪有熟人？没什么亲戚，只有一个好基友在北京，本篇以下都用 leo 代替他。为什么叫好基友？因为我们认识15年之久，我去过他家，吃过他妈做的饭，他来过我家，吃过我妈做的饭。而且频率还挺高，我们经常睡同一张床，我穿过他的裤子，他穿过我的外套，你说这样的人能不是基友的 best 级别么？一辈子有这么一个人，值得！不得不说，我现在的生活，有他一大部分的作用。要不是他鼓动我去北京，我现在的生活将会是另一番天地。当然了也不是说我现在生活有多好，只是经过种种觉得没有遗憾！&lt;/p&gt;

&lt;p&gt;撤太远了，还是说搬家吧！&lt;/p&gt;

&lt;p&gt;对，没错，就是 leo 让我来北京的，我这次就是投靠他的。现在问问自己要是没一个熟人到底敢去吗？答案是2个字，敢去！ 这不坐车前他就三番五次的打电话叮嘱我，车上小心，注意安全什么的。好像是哥哥照顾弟弟似的。其实我是哥，因为我比他大一个月，可见他有多么一颗强大而温柔的心。&lt;/p&gt;

&lt;p&gt;列车行驶了12个小时之后，终于在太阳升起的那一刻缓缓驶进北京市区。记得那时天很蓝，楼很高！ leo 说他来车站接我，我想他肯定早到了！列车终于停了下来，下车后我一眼就看见leo了，身边还有他的一个小伙伴，我不认识，只见他俩都在那瑟瑟发抖，因为天还是有点冷。基友之间无需寒暄，他俩直接拎着我的行李，走出车站，打了个的，直奔万寿路附近的某小区。&lt;/p&gt;

&lt;p&gt;距离很近，10分钟的车程，还没来得及看车外风景就到了，第一次进北京城其实还好吧。咱也是见过世面的人，毕竟也在我大西安呆过几年！下车后，看看周围觉得不是很繁华，就弱弱的问leo，这里不是北京城区吧？他笑说：这还能不算？三环呢，6站地铁就到天安门啦！好吧。辗转几个弯，他俩领我到一个小区，满是高楼，心里想这家伙不错啊，在北京能住这等好小区。到啦，就这！在一排平房处停了下来，进了其中一间平房。房子面积不到20平，一双人床，一桌子，还有几个箱子和一些生活用品。leo 笑说，比较简陋先凑活住吧，过些天咋们再换。其实还好吧，西安不是都这样的房子么？我问这房租怎么算？ 600一个月。这么贵？ 这算便宜的啦。这是我第一次知道帝都的房租这么贵。洗手间在外面，外面有卖饭的，好了，先不说了，你先休息，我去上班了，说完他就出门了。&lt;/p&gt;

&lt;p&gt;好，先美美的睡一觉!&lt;/p&gt;

&lt;p&gt;下篇说第二次搬家……&lt;/p&gt;
</description>
                                <pubDate>Tue, 01 Apr 2014 22:00:00 +0000</pubDate>
                                <link>http://pobing.info//%E6%96%87%E7%AB%A0/2014/04/01/8-5-%E6%90%AC%E5%AE%B6%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B%EF%BC%8D1.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E6%96%87%E7%AB%A0/2014/04/01/8-5-%E6%90%AC%E5%AE%B6%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B%EF%BC%8D1.html</guid>
                        </item>
                
                        <item>
                                <title>Linux 新服务配置</title>
                                <description>&lt;p&gt;linux 版本 ubuntu12.04 x86&lt;/p&gt;

&lt;p&gt;首次登录：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;ssh root@x.x.x.x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改root用户密码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;passwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建新用户组（admin组）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;addgroup admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;添加新用户：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;useradd -d /home/bill -s /bin/bash -m bill

＃参数d指定用户的主目录，参数s指定用户的shell，参数m表示如果该目录不存在，则创建该目录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置新用户的密码&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;passwd bill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将新用户（bill）添加到用户组（admin）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;usermod -a -G admin bill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为新用户设定权限&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;visudo #visudo命令会打开sudo设置文件/etc/sudoers

root    ALL=(ALL:ALL) ALL
bill    ALL=(ALL:ALL) ALL  #为bill 用户设定 sudo 权限
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改默认服务器 ssh 端口，1025 － 65536 之间的任意整数,我们设置端口 58404&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo cp /etc/ssh/sshd_config ~  # 备份 sshd_config 文件
sudo vi /etc/ssh/sshd_config


Port 58404
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;禁止root 用户登录&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Protocol 2

PermitRootLogin no
PermitEmptyPasswords no
PasswordAuthentication no

RSAAuthentication yes
PubkeyAuthentication yes
AuthorizedKeysFile .ssh/authorized_keys

UseDNS no


sudo  passwd -l root # 禁用 root 账号
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;指定允许登录的用户：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;AllowUsers bill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;改变authorized_keys文件的权限&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo chmod 600 ~/.ssh/authorized_keys &amp;amp;&amp;amp; chmod 700 ~/.ssh/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重启SSHD&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo service ssh restart

//或者

sudo /etc/init.d/ssh restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ruby install&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install curl

curl -L get.rvm.io | bash -s stablesource ~/.rvm/scripts/rvm

rvm requirements

rvm install 2.0
rvm use 2.0
ruby -v
rvm --default use 2.0
gem install rails -v 3.2.16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;apache,mysql,phpmyadmin&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install mysql-server
sudo apt-get install libmysqlclient-dev
mysql_config —socket # config sock
sudo apt-get install apache2
sudo apt-get install phpmyadmin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;git&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git-core
ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;nginx&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;memcached&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install memcached
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;启动服务&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;memcached -d -m 50 -p 11011 -u memcache -l 127.0.0.1

常用memcache启动参数介绍:

-d：以daemon的方式在后台启动运行一个守护进程
-m：分配给Memcache使用的最大内存数量，单位是MB，默认是64MB
-u：设定运行Memcache的用户（memcache默认不允许以root用户登录）
-l：监听的服务器IP地址
-p：设置Memcache监听的TCP端口，默认是11211(p为小写)
-c：设置最大并发连接数，默认是1024
-P：设置保存Memcache的pid文件路径(P为大写)
-h：显示帮助
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;关闭服务&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;kill -9 memcache的进程ID
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mysql create user and Grant Permissions&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;user mysql;
create user &amp;#39;rabel&amp;#39;@&amp;#39;localhost&amp;#39; identified by &amp;#39;password&amp;#39;;
GRANT ALL PRIVILEGES ON db_name. * TO &amp;#39;name&amp;#39;@&amp;#39;localhost&amp;#39;;
FLUSH PRIVILEGES;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其他辅助软件&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install nodejs
sudo apt-get install imagemagick
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ssh 别名登录&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;在本机~/.ssh文件夹下创建config文件，内容如下。

Host s1
HostName 128.199.209.242
User bill
Port 25000

ssh s1 # 新开shell,测试是否可以登录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装终极Shell zsh&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install zsh

wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh

chsh -s /bin/zsh #zsh作为默认shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;参考：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/03/server_setup.html&quot;&gt;Linux服务器的初步配置流程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://spenserj.com/blog/2013/07/15/securing-a-linux-server/&quot;&gt;securing-a-linux-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dhq.me/ubuntu-install-use-memcache&quot;&gt;Ubuntu 12.04 LTS下memcache的安装使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;推荐：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pobing.info/%E6%8A%80%E6%9C%AF/2014/03/30/ssh-%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95.html&quot;&gt;ssh 免密码登录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pobing.info/%E6%8A%80%E6%9C%AF/2014/01/16/%E8%BF%90-git-%E8%A3%B8%E4%BB%93%E5%BA%93%E5%81%9A%E4%BB%A3%E7%A0%81%E9%83%A8%E7%BD%B2.html&quot;&gt;使用 git 裸仓库部署项目&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                                <pubDate>Sun, 30 Mar 2014 22:18:11 +0000</pubDate>
                                <link>http://pobing.info//%E6%8A%80%E6%9C%AF/2014/03/30/Linux-%E6%96%B0%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E6%8A%80%E6%9C%AF/2014/03/30/Linux-%E6%96%B0%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE.html</guid>
                        </item>
                
                        <item>
                                <title>ssh 免密码登录远程机器</title>
                                <description>&lt;p&gt;假设 A为本地主机(即用于控制其他主机的机器), B为远程主机(即被控制的机器Server), ip为192.168.10.105; 前提是两台机器都是Linux系统
这里不做 ssh 的 id_rsa.pub 的生成&lt;/p&gt;

&lt;p&gt;将本地 ~/.ssh/id_rsa.pub 拷贝到要登录的机器B机器，执行以下命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo scp /home/a/.ssh/id_rsa.pub b@192.168.10.105:/home/b/.ssh/a_id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;B机把从A机复制的id&lt;em&gt;rsa.pub添加到.ssh/authorzied&lt;/em&gt;keys文件里&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;touch /root/.ssh/authorized_keys (如果已经存在这个文件, 跳过这条)
cat ~/.ssh/jdd_id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys

# 将id_rsa.pub的内容追加到 authorized_keys 中, 注意不要用 &amp;gt; ，否则会清空原有的内容，使其他人无法使用原有的密钥登录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改 authorized_keys 文件权限：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;chmod 600 ~/.ssh/authorized_keys


 # 必须将~/.ssh/authorized_keys的权限改为600, 该文件用于保存ssh客户端生成的公钥，可以修改服务器的ssh服务端配置文件/etc/ssh/sshd_config来指定其他文件名
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;测试：A机器执行&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;ssh b@192.168.10.105
scp something b@192.168.10.105:/home/b/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上都不需要输入密码能成功操作，说明配置OK！&lt;/p&gt;

&lt;p&gt;参考：&lt;a href=&quot;http://my.oschina.net/aiguozhe/blog/33994&quot;&gt;http://my.oschina.net/aiguozhe/blog/33994&lt;/a&gt;&lt;/p&gt;
</description>
                                <pubDate>Sun, 30 Mar 2014 22:13:55 +0000</pubDate>
                                <link>http://pobing.info//%E6%8A%80%E6%9C%AF/2014/03/30/ssh-%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E6%8A%80%E6%9C%AF/2014/03/30/ssh-%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95.html</guid>
                        </item>
                
                        <item>
                                <title>《舌尖上的毒：酷农解密食品安全》的笔记3-食品添加剂和酱缸文化</title>
                                <description>&lt;ol&gt;
&lt;li&gt;添加剂－不必谈‘添’色变
从双汇瘦肉精事件、牛肉膏事件、染色馒头、塑化剂风波，到味千拉面骨汤门、山西陈醋勾兑门……层出不穷的食品安全事件的背后，食品添加剂成为了最为著名而神秘的“舆论推手”。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;果汁基本配料是30%的果汁，剩下的都是水和香精、色素什么的，勾兑出来甜香爽口，颜色又好看，&lt;/p&gt;

&lt;p&gt;草莓夹心饼干中压根儿就没有草莓，而是用食用红色素染出来的；蓝莓蛋糕中当然也没有蓝莓，而是亮蓝或靛蓝色素染成的。至于逼真的水果风味，则是糖、酸和香精的杰作。&lt;/p&gt;

&lt;p&gt;你想想，肉都这么贵了，火腿肠还能这么便宜？降低成本最直接的方法就是不加肉，全给你大豆蛋白和香精。在食品里面，‘便宜没好货’是亘古不变的道理。”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;不要轻信广告，什么补钙啊、补铁啊、低盐啊……你真想补充营养，还是得吃原生态的肉、蛋、奶，千万不要指望工业产品补充营养。这些工业化加工的食品，只是帮人们换换口味，让人们吃着心情舒畅。”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;你可以只在火腿里放30%的肉，甚至可以一点儿肉都不放，但是你得让消费者知道，这里面到底是什么内容。至于买不买，那是消费者的选择了。”许某说，这就是我们与人家的观念的本质区别。消费者明明白白购买，厂家也明明白白销售。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;添加剂没有错，错的是对它的滥用和整个行业的不够规范。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;某个食品只要你特别喜欢吃，就不符合自然，先停一段时间再说。&lt;/p&gt;

&lt;p&gt;中国人吃了2000多年的卤水豆腐。但是，电影《白毛女》中的杨白劳却是喝卤水死的。&lt;/p&gt;

&lt;p&gt;食品添加剂是用于改善食物品质、口感用的可食用物质，而非食用物质是禁止使用和向食品中添加的。&lt;/p&gt;

&lt;p&gt;苏丹红、三聚氰胺等都不是食品添加剂。这样的东西进入食品，既不是东西的错，也不是科学的错，错的是把它们用在食品中的人。&lt;/p&gt;

&lt;p&gt;头发和酱油，这两个截然不同的事物怎么会联系在一起呢？&lt;/p&gt;

&lt;p&gt;做生意本来就是大鱼吃小鱼，大工厂有本钱做宣传。&lt;/p&gt;

&lt;p&gt;原汁酱油为生抽，呈红褐色。生抽再加入焦糖炼制，就成老抽，颜色较深&lt;/p&gt;

&lt;p&gt;2.酱缸文化&lt;/p&gt;

&lt;p&gt;近年来，不论是新闻媒体还是网民评论，食品安全事件之风愈演愈烈。从瘦肉精、苏丹红到三聚氰胺事件，一幕幕触目惊心的场景频现，我们不禁要问：这到底是什么原因？有人说，是西方拜金主义的影响；也有人说，是由于主管部门的失职。可是，探究根本，我们发现，一个历来讲诚信、讲道德的民族恰恰缺失了最重要的诚信与道德。如今，到了该反省的时候了。&lt;/p&gt;

&lt;p&gt;孝悌是仁之本，以家庭为圆心开始向外扩展，从亲戚到熟人再到同乡一圈一圈地伸延。讲仁义的中国人在不面对经济政治压力的情况下虽然可以对一切人表示出仁爱之心，但是稍有压力，就向圆心内收缩，“圈内人”就共同造假，互不揭发，向局外人保守秘密。&lt;/p&gt;

&lt;p&gt;狭隘的思想必然导致不良的后果。另一种说法是“己欲立而立人，己欲达而达人”。这样一来，我们可以得出一个结论，即制造有毒食品的人并不是没有道德，反而在传统意义上有一定的道德，只是没有处理好小集体和大集体的关系。“亲亲互隐”被认为是普世性的道德原则，而这样恰好给自私自利提供了理论基础，只顾好自己的“小家庭”，而不去管整个社会这个“大家庭”，狭隘的眼光让人们只追求自身利益。&lt;/p&gt;

&lt;p&gt;字眼上看，酱缸最主要的功能就是发酵，不管把什么东西放进去，捂在里面，经过发酵、变质，最后都会变成另一种面目全非、截然相反的东西，我们的小聪明、小智慧可以把这种工艺发挥到炉火纯青的地步。&lt;/p&gt;

&lt;p&gt;只要对我有利，无论多么八竿子打不着的事儿，我们都可以拿来放进自己的鞋子，而且还没有削足适履的不舒服。对了自己的心思，多么下作的勾当，我们也能找出冠冕堂皇的理由；拂了自己的意愿，多么高尚的事情，我们也能铸造出何患无辞的冤狱。
作为一种亚文化传统，它同样渗透在我们的意识深处，顽强地发挥着作用，影响着甚至决定着我们的思维方式和行为方式。“上有政策，下有对策”，则是这种文化最经典的集大成变种。&lt;/p&gt;

&lt;p&gt;一个社会道德诚信的缺失，加上法制体制不完善，这才是“味千拉面们”铤而走险的真正原因。中国是一个“酱缸”，中国是一个“实验室”，这样才会有很多冒险家来到这里攫取财富，成为富豪。&lt;/p&gt;

&lt;p&gt;在有毒食品大行其道的今天，许多百姓深受其害，也让我们国人深感愤慨，然而，透过这一现象，我们看到的不应该仅仅停留在表面，在有毒食品的背后，是我们应该进行更深刻的文化反思。我国传统文化光辉绚烂，可是对传统文化的美好向往到了如今却演变成无尽的遗憾。&lt;/p&gt;

&lt;p&gt;当有毒食品毒害我们的肉体时，我们还认为这是单纯的商业欺诈行为，不从根源上解决问题，不采取积极措施，那么到了有毒食品侵害我们的灵魂、污染我们的思想时，我们又该何去何从……&lt;/p&gt;

&lt;p&gt;3.假醋？勾兑醋？&lt;/p&gt;

&lt;p&gt;做这种醋十分简单，就是在地下黑市买一些工业醋酸和工业盐，然后找一处有水源的隐蔽地方，适量兑起来就可以，&lt;/p&gt;

&lt;p&gt;公斤的成本不到2毛钱，卖价每公斤能达到5毛钱。&lt;/p&gt;

&lt;p&gt;据资料介绍，假醋的主要成分是工业醋酸，属有机化工原料，接触皮肤会引起灼伤、刺痛、发水泡，引起鼻、喉、眼睛等疾病。工业醋酸中含有重金属铬，铬不能被人体吸收和排泄，由此加工的食醋，长期食用可导致沉积性铬中毒，对人体血液、骨骼和中枢神经毒害极大，会造成胎儿畸形、白血病、痴呆、脱发。&lt;/p&gt;

&lt;p&gt;“市场上销售的真正意义上的山西老陈醋不足5%，也就是说，消费者平常喝的基本都是醋精勾兑的。”&lt;/p&gt;

&lt;p&gt;勾兑醋还分两种，一种是冰醋酸勾兑的，一种是加苯甲酸钠防腐的添加剂，放添加剂的占了95%，不添加任何防腐剂、纯酿的6度老陈醋不多。”&lt;/p&gt;

&lt;p&gt;据资料介绍，工业冰醋酸的酸度、味道，几乎与食用冰醋酸无异，只有通过极专业的检测，才能根据天然度指标进行分辨。&lt;/p&gt;

&lt;p&gt;正常食醋应以高粱、小米、豌豆等天然材料发酵而成，食用冰醋酸也是用相同原料。不过，工业冰醋酸则为石油副产品加工生产，原材料上完全不同。而根据国家标准，食用冰醋酸的天然度至少达九成&lt;/p&gt;

&lt;p&gt;4.谁打翻了“醋坛子”&lt;/p&gt;

&lt;p&gt;市面上的山西老陈醋95%为勾兑醋，且多添加了防腐剂。”&lt;/p&gt;

&lt;p&gt;工业冰醋酸往往会产生一些游离矿酸&lt;/p&gt;

&lt;p&gt;金属砷、铅超标。消费者以后，就会造成消化不良、腹泻。如果长期食用，会危害身体健康。如果食物中的冰醋酸浓度过高，还会烧伤消化道黏膜。特别是对于孕妇、老人、小孩这些胃肠功能较弱的人群，会引起刺激性反应。&lt;/p&gt;

&lt;p&gt;社会诚信缺失打翻了“醋坛子”？当别的企业规规矩矩生产酿造醋时，有人偏生产配制醋，还伪称酿造醋；当别的企业按照标准生产配制醋时，有人偏要偷工减料或以次充好。在政策引导和社会监督规范下，当中国醋企走出小、散、乱，走进规模化、标准化、品牌化的新天地时，哪个有影响的品牌敢于偷工减料、以次充好？哪个有影响的品牌愿意放弃巨大利润来偷取蝇头小利？哪个有影响的品牌会为了眼前诱惑而丧失未来？&lt;/p&gt;

&lt;p&gt;5.毛油和地沟油
一种是行业内称之为毛油的油，也就是我们俗称的地沟油，它是用过期的食用油质炼制的，其实也就是过期的油；还有一种叫大油，它是从各个肉联厂、加工厂的猪皮上采下来的油，这种油的酸价高达20，是标准食用油的几十倍；最后一种油叫白油，是用前两种油精炼而成的一种油。按照规定，这三种油是不能投放到市场上用作食用用途的&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;当今社会，一些依靠不法生意发家致富的人，在不少人的眼里是“能人”，是“成功人士”。但是，他们为了牟取私利而往食品里添加对人体有害的物质，实际上是“谋财害命”。而那些本本分分做生意的人，却被人讥笑为“不知变通”的老实人。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;遭到误解的人往往要起劲地为自己辩白，可结果总是事与愿违，你说的越多，别人对你的误解越深。你的辩白还有一个作用，那就是不断地提醒别人，不要忘记对你有过的误解。对付误解的最好办法就是沉默。让别人对你失去兴趣，也让你对自己的不幸失去兴趣。上帝总有一天会给你一个机会，让你不辩自明&lt;/p&gt;

&lt;p&gt;6.有毒的水发产品
水产商贩中流行着一句行话：水产水产，不掺水就惨。&lt;/p&gt;

&lt;p&gt;在一个操作间，屋里污水四溢，腥臭味扑鼻，地上摆了20多个大塑料盆，每个盆里均浸满了鸡爪，并不断地泛冒着令人恶心的泡沫。浸泡在盆中的鸡爪个个是“白白胖胖”、“晶莹剔透”的，个头比平常的鸡爪足足大了一倍。&lt;/p&gt;

&lt;p&gt;海带也要注意，看上去碧绿、鲜脆欲滴的“新品”海带，居然是用化工染料连二亚硫酸钠和碱性品绿等把土黄绿色海带进行泡、染加工浸泡出来的毒海带。&lt;/p&gt;

&lt;p&gt;主要是非法添加有毒染料孔雀石绿。&lt;/p&gt;

&lt;p&gt;颜色过于鲜绿肥厚的海带，可能被染色，颜色偏暗、偏灰的海带，反而更加安全。&lt;/p&gt;

&lt;p&gt;孙焕平说，吃海参是暖身体的，希望这些加工海参的人在数钱的同时，能手下留点情，少放一点糖和盐，让买海参的人心里也暖一点。&lt;/p&gt;

&lt;p&gt;7.公民意识&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;当利润达到10%的时候，他们将蠢蠢欲动；当利润达到50%的时候，他们将铤而走险；当利润达到100%的时候，他们敢于践踏人间的一切法律；当利润达到300%的时候，他们敢于冒绞刑的危险。&lt;/strong&gt; 马克思的话，一语中的，把食品造假者们的心态揭露得淋漓尽致。&lt;/p&gt;

&lt;p&gt;在我们羡慕发达国家完善的食品安全监管制度的时候，我们应该知道，权利不会从天而降，都是要靠自己的行动去维护的。公众维护食品安全应该像当年美国黑人争取自己的权利一样，靠坚韧和汗水拿回属于自己的东西。&lt;/p&gt;

&lt;p&gt;要鉴定企业的产品是否安全，政府的监管是否到位，标准的制定是否靠谱，公民本身也必须做到自我力量的提升。
今天，当社会逐渐步入物丰裕阶段，大部分人开始从“我饿”时代步入到“我怕”时代，饥渴与寒冷开始远离我们，但有毒食品却从天而降。对此，我们首先应该积极加入到抵制无良企业的队伍中，用消费者的力量制衡无良企业；其次，我们还需时刻紧盯政府监测系统的疏漏，杜绝公权力的不作为；同时，我们更需通过互联网等平台，唯有如此，我们才能在自己的前方夯实起一堵足以保障自身和家人食品安全的高墙。&lt;/p&gt;

&lt;p&gt;一个称号叫公民。什么叫公民？除了我自己和自己的生活，还要想到旁边第二个人，想到这一点就是公民。他代表了什么东西，就是中国的进步。公民站起来了。什么叫公民，人心不死，民心不死。邪不压正，所有不对的东西，我们都有责任去管一管。”&lt;/p&gt;

&lt;p&gt;不知从什么时候起，我们对碗中的米、杯里的水、盘中的鱼和锅中的油开始忧心忡忡、食不甘味。天上地下、海里河里、植物动物……众多领域涉及食品安全的事件，让消费者对入口的食品绷紧了神经。&lt;/p&gt;

&lt;p&gt;现在中国消费者普遍存在“吃动物食品怕含激素，吃植物食品怕有毒素，吃饮料食品怕掺色素”的恐惧心理。&lt;/p&gt;

&lt;p&gt;如何消除消费者对食品的不安全感，让中国消费者吃上安全食品的梦想能够照进现实，这确实是我们每一个人都要思考的问题。&lt;/p&gt;
</description>
                                <pubDate>Sat, 22 Feb 2014 20:37:24 +0000</pubDate>
                                <link>http://pobing.info//%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/2014/02/22/%E8%88%8C%E5%B0%96%E4%B8%8A%E7%9A%84%E6%AF%92-4.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/2014/02/22/%E8%88%8C%E5%B0%96%E4%B8%8A%E7%9A%84%E6%AF%92-4.html</guid>
                        </item>
                
                        <item>
                                <title>《舌尖上的毒：酷农解密食品安全》的笔记3-奶茶，既没奶，也没茶</title>
                                <description>&lt;pre&gt;
离职的员工到处去说原来公司的“坏话”，这个员工一定是个没有道德的人。
曾经我也是这么认为的。
可是，最近我的想法变了，
一个知道内情而不去告诉别人，眼看着别人吃亏上当的人，
那才是个彻底道德败坏的人。
&lt;/pre&gt;

&lt;p&gt;1.别轻易喝下它&lt;/p&gt;

&lt;p&gt;后来孙焕平才知道，所谓的蛋白精其实就是三聚氰胺。三聚氰胺，俗称密胺、蛋白精，是一种三嗪类含氮杂环有机化合物，被用作化工原料。它是白色单斜晶体，几乎无味，可溶于甲醇、甲醛、乙酸、热乙二醇、甘油、吡啶等，不溶于丙酮、醚类，对身体有害，不可用于食品加工或用作食品添加物。&lt;/p&gt;

&lt;p&gt;婴儿最理想的食品是母乳，在母乳不足或无母乳时可食用本产品。&lt;/p&gt;

&lt;p&gt;2.奶茶？既没奶，也没茶&lt;/p&gt;

&lt;p&gt;可以说，武汉大多数奶茶店所售的奶茶都是用奶精和甜蜜素加色素勾兑而成，长期饮用，将会为身体健康埋下隐患。&lt;/p&gt;

&lt;p&gt;“大多数香甜爽口的奶茶其实就是一堆食品添加剂加上色素做成的，时下流行的果味奶茶也大同小异。”&lt;/p&gt;

&lt;p&gt;市面上出售的大多数奶茶使用的‘奶’是一种奶精，而奶精的主要成分叫氢化植物油，是一种反式脂肪酸，与鲜奶根本搭不上边。奶精不仅价格便宜，而且味道更香浓，原因就是奶精中含有一种名为植脂末的化学物质。而这种物质中含有铅、铜等有害物质，长期摄入，可增加患冠心病、肿瘤、哮喘等疾病的几率。”&lt;/p&gt;

&lt;p&gt;“鲜奶一斤大约一块五，按照2∶1比例冲调奶茶才会有奶味，一小杯奶茶360毫升，要用240毫升鲜奶，价格就在8毛钱左右了，这还没有加上其他原料，武汉一杯360毫升的奶茶普遍售价在两块五，加上房租、水电、人工成本，用鲜奶就要赔本了。”&lt;/p&gt;

&lt;p&gt;奶，其特点就是把大分子牛奶化整为零，方便人体吸收，广告做得也很形象。如果搞个相反的，把小颗粒搞成大颗粒，让人吸收不了你会买吗？&lt;/p&gt;

&lt;p&gt;有些生产商开始往里面加高分子材料，也就是传统意义上的塑料。&lt;/p&gt;

&lt;p&gt;水果奶茶为了增加水果的质感，不少奶茶店往里面加果肉，果肉五颜六色，很多都是经加工而成的产品，全部添加了色素等成分。除了白色果脯外，其他颜色的果脯都是添加色素形成的，比如日落黄、胭脂红等。不过，喝一两杯人体也不会感觉有什么异样。&lt;/p&gt;

&lt;p&gt;据了解，日落黄是一种人工色素，如果超标使用就有致癌的可能；如果频繁饮用，累计超标同样会增加风险。&lt;/p&gt;

&lt;p&gt;奶茶的另外一个不得不说的秘密是甜蜜素——奶茶甜味的来源。正常的甜味应该来自蔗糖，但奶茶中的甜味却是来自甜蜜素，即糖精。”&lt;/p&gt;

&lt;p&gt;陈某不无忧虑地说，适当的糖精放到奶茶里不要紧，但是有些奶茶店使用的糖精违规添加了芒硝和工业氯化镁，一般进价低于10块钱一斤的糖精都可能添加了芒硝和氯化镁，这种东西都是工业用的，人怎么能吃呢？&lt;/p&gt;

&lt;p&gt;“也就是说，所谓的奶茶里面，其实是既没奶，也没茶。”孙焕平说。&lt;/p&gt;

&lt;p&gt;制作一杯普通奶茶大体需要植脂末、麦芽糊精、蛋白糖、阿拉伯胶、乙基麦芽酚、亮兰苯甲酸钠等食品添加剂。&lt;/p&gt;

&lt;p&gt;老板笑了笑：“奶茶就是添加剂做的，一杯奶茶含有上十种添加剂，要是出问题早就该出了。&lt;/p&gt;

&lt;p&gt;3.乳业工人的良心话&lt;/p&gt;

&lt;p&gt;离职的员工到处去说原来公司的“坏话”，这个员工一定是个没有道德的人。曾经我也是这么认为的。可是，最近我的想法变了，一个知道内情而不去告诉别人，眼看着别人吃亏上当的人，那才是个彻底道德败坏的人。&lt;/p&gt;

&lt;p&gt;我就不相信地球上的奶牛，能挤出那么高蛋白质的奶……&lt;/p&gt;

&lt;p&gt;尿素怎么转化为三聚氰胺的？&lt;/p&gt;

&lt;p&gt;很简单，奶粉的生产过程就是将鲜奶放在封闭的、高温的环境下，然后采取喷雾的方式直接转化成粉状就成了奶粉，而尿素在高温下会产生变化，生成三聚氰胺，有毒的奶粉就这样生成了。”&lt;/p&gt;

&lt;p&gt;那就加抗生素，每50公斤牛奶加20万单位的庆大霉素，保证你放上两天之后，奶还是鲜奶，连味道都不会变。&lt;/p&gt;

&lt;p&gt;早上，买两根地沟油油条，切个苏丹红咸蛋，冲杯三聚氰胺奶，吃完后，开锦湖轮胎的车去上班。中午，瘦肉精猪肉炒农药韭菜，再来一份人造鸡蛋卤注胶牛肉，加一碗石蜡翻新陈米饭，泡壶香精茶叶。下班，买避孕药鱼、尿素豆芽、膨大西红柿、石膏豆腐。回到家，吃个增白剂加柠檬黄馒头……”&lt;/p&gt;
</description>
                                <pubDate>Sat, 22 Feb 2014 20:16:24 +0000</pubDate>
                                <link>http://pobing.info//%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/2014/02/22/%E8%88%8C%E5%B0%96%E4%B8%8A%E7%9A%84%E6%AF%92-3.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/2014/02/22/%E8%88%8C%E5%B0%96%E4%B8%8A%E7%9A%84%E6%AF%92-3.html</guid>
                        </item>
                
        </channel>
</rss>