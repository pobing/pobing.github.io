<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
        <channel>
                <title>Pobing&#39;s Blog</title>
                <description>Pobing&#39;s life Share all.</description>
                <link>http://pobing.info</link>
                <atom:link href="http://pobing.info/feed.xml" rel="self" type="application/rss+xml" />
                
                        <item>
                                <title>养成备份的习惯</title>
                                <description>&lt;p&gt;plugins&lt;/p&gt;
</description>
                                <pubDate>Sat, 03 May 2014 05:24:42 +0000</pubDate>
                                <link>http://pobing.info//stage/2014/05/03/yang-cheng-bei-fen-de-xi-guan.html</link>
                                <guid isPermaLink="true">http://pobing.info//stage/2014/05/03/yang-cheng-bei-fen-de-xi-guan.html</guid>
                        </item>
                
                        <item>
                                <title>养成备份的习惯</title>
                                <description>&lt;p&gt;plugins&lt;/p&gt;
</description>
                                <pubDate>Sat, 03 May 2014 05:24:42 +0000</pubDate>
                                <link>http://pobing.info//%E6%96%87%E7%AB%A0/2014/05/03/yang-cheng-bei-fen-de-xi-guan.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E6%96%87%E7%AB%A0/2014/05/03/yang-cheng-bei-fen-de-xi-guan.html</guid>
                        </item>
                
                        <item>
                                <title>Redis 在短信验证码中的运用</title>
                                <description>&lt;p&gt;很多时候都想不到用 &lt;a href=&quot;http://redis.io&quot;&gt;redis&lt;/a&gt;，这次项目中要做给用户发送手机验证码的功能。
一般发送手机验证码也就是以下步骤：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;1.用户获取手机验证码
2.服务器生成验证码（一般是 4-6 位数字），调用第三方发短信接口
3.用户收到验证码的短信后，输入验证码提交
4.服务器验证验证码合法性
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面详细说说以上步骤注意事项：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;步骤1：发短信是调用第三方接口，是要花钱的。用户请求一次发短信接口，1 毛钱就出去了。所以不能让用户一直请求，要对步骤 1 进行请求限制。限制条件假如是： 1次/分钟, 3次/小时
步骤2：服务器生成的验证码要和当前用户关联
步骤3：因为发短信会有时间的延迟，用户好久收不到短信怎么办，多长时间可以重新请求发短信
步骤4：验证码多长时间有效，假如10分钟内有效
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;先说传统的解决办法，假如数据库是 Mysql 要实现上述的需求可以实现，因为要对用户的请求次数进行计数，还要判断验证码的有效期，难点就在此，想想就麻烦。
而且验证码是临时性的，其实不需要存储的。
&amp;lt;!-- 创建一个保存验证码的数据表假如叫：codes，codes 表和用户表 users 关联，用户请求发短信的接口，服务端先判断当前时间和该用户的上一次code 记录创建时间只差，如果小于1 ，说明在一分钟内，返回稍后操作的提示，如果大于1，说明在1分钟之外，则codes 表新增一记录，然后发短信， --&amp;gt;&lt;/p&gt;
</description>
                                <pubDate>Sun, 20 Apr 2014 10:06:00 +0000</pubDate>
                                <link>http://pobing.info//stage/2014/04/20/Redis-%E5%9C%A8%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8.html</link>
                                <guid isPermaLink="true">http://pobing.info//stage/2014/04/20/Redis-%E5%9C%A8%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8.html</guid>
                        </item>
                
                        <item>
                                <title>Redis 在短信验证码中的运用</title>
                                <description>&lt;p&gt;很多时候都想不到用 &lt;a href=&quot;http://redis.io&quot;&gt;redis&lt;/a&gt;，这次项目中要做给用户发送手机验证码的功能。
一般发送手机验证码也就是以下步骤：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;1.用户获取手机验证码
2.服务器生成验证码（一般是 4-6 位数字），调用第三方发短信接口
3.用户收到验证码的短信后，输入验证码提交
4.服务器验证验证码合法性
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面详细说说以上步骤注意事项：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;步骤1：发短信是调用第三方接口，是要花钱的。用户请求一次发短信接口，1 毛钱就出去了。所以不能让用户一直请求，要对步骤 1 进行请求限制。限制条件假如是： 1次/分钟, 3次/小时
步骤2：服务器生成的验证码要和当前用户关联
步骤3：因为发短信会有时间的延迟，用户好久收不到短信怎么办，多长时间可以重新请求发短信
步骤4：验证码多长时间有效，假如10分钟内有效
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;先说传统的解决办法，假如数据库是 Mysql 要实现上述的需求可以实现，因为要对用户的请求次数进行计数，还要判断验证码的有效期，难点就在此，想想就麻烦。
而且验证码是临时性的，其实不需要存储的。
&amp;lt;!-- 创建一个保存验证码的数据表假如叫：codes，codes 表和用户表 users 关联，用户请求发短信的接口，服务端先判断当前时间和该用户的上一次code 记录创建时间只差，如果小于1 ，说明在一分钟内，返回稍后操作的提示，如果大于1，说明在1分钟之外，则codes 表新增一记录，然后发短信， --&amp;gt;&lt;/p&gt;
</description>
                                <pubDate>Sun, 20 Apr 2014 10:06:00 +0000</pubDate>
                                <link>http://pobing.info//%E6%8A%80%E6%9C%AF/2014/04/20/Redis-%E5%9C%A8%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E6%8A%80%E6%9C%AF/2014/04/20/Redis-%E5%9C%A8%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8.html</guid>
                        </item>
                
                        <item>
                                <title>8个月5次搬家的心路历程（一）</title>
                                <description>&lt;p&gt;&lt;strong&gt;北漂不易，坚持不易，且行且珍惜。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;北漂&lt;/strong&gt;，不必说工作有多难找，不必说吃饭吃了多少地沟油，不必说早晨是怎么被人推进地铁，更不必说每天吸进去多少雾霾，就单单每次那找房就够让你痛苦的！&lt;/p&gt;

&lt;p&gt;2010年4月来的北京，到年底共搬家5次。搬了5次？吹的吧！吹没吹且看下面：&lt;/p&gt;

&lt;p&gt;故事都是发生在2010年，以下省去年份，内容如有雷同，实属故意。&lt;/p&gt;

&lt;pre&gt;
第一次： 4月初，从西安雁塔区——北京万寿路
第二次： 4月底，万寿路——青塔
第三次： 8月底， 青塔 —— 七里渠南村
第四次： 10月中旬，七里渠南村 —— 青塔
第五次： 11月中旬 青塔 —— 天通苑
&lt;/pre&gt;

&lt;p&gt;有模有样，能记得那么清？编的吧。&lt;/p&gt;

&lt;p&gt;不过我只想说，有些事情真实经历了，触动心灵了，就自然而然的记住了。&lt;/p&gt;

&lt;p&gt;下来就说说第一次搬家：&lt;/p&gt;

&lt;p&gt;4月1日，从古都西安坐上了北上的列车。为什么选择愚人节这天，而且是美丽的四月天？ 哈哈，这并没特殊意义，随机事件，实属巧合。记得那天宿舍5，6个兄弟都来西安车站为我送行，多好的哥们，可惜有几个现在都失联了，有点想念，不知过的都还好？&lt;/p&gt;

&lt;p&gt;坐了一晚上的火车，没吃、没喝、也没上厕所，好像也没睡着。这是因为要去帝都激动的吗？当然不是，也许是因为一个人，胆怯的，或是怕谁把东西拿走了？其实也没什么东西，一个皮箱，一包衣服算是这次搬家的东西。这次搬家东西最少，距离最远。有人会说，这怎么能叫搬家？你说不是就不是吧！&lt;/p&gt;

&lt;p&gt;走之前身边的小伙伴问我，你帝都有熟人么？你一个人都敢去？我笑笑说，北京咱哪有熟人？没什么亲戚，只有一个好基友在北京，本篇以下都用 leo 代替他。为什么叫好基友？因为我们认识15年之久，我去过他家，吃过他妈做的饭，他来过我家，吃过我妈做的饭。而且频率还挺高，我们经常睡同一张床，我穿过他的裤子，他穿过我的外套，你说这样的人能不是基友的 best 级别么？一辈子有这么一个人，值得！不得不说，我现在的生活，有他一大部分的作用。要不是他鼓动我去北京，我现在的生活将会是另一番天地。当然了也不是说我现在生活有多好，只是经过种种觉得没有遗憾！&lt;/p&gt;

&lt;p&gt;撤太远了，还是说搬家吧！&lt;/p&gt;

&lt;p&gt;对，没错，就是 leo 让我来北京的，我这次就是投靠他的。现在问问自己要是没一个熟人到底敢去吗？答案是2个字，敢去！ 这不坐车前他就三番五次的打电话叮嘱我，车上小心，注意安全什么的。好像是哥哥照顾弟弟似的。其实我是哥，因为我比他大一个月，可见他有多么一颗强大而温柔的心。&lt;/p&gt;

&lt;p&gt;列车行驶了12个小时之后，终于在太阳升起的那一刻缓缓驶进北京市区。记得那时天很蓝，楼很高！ leo 说他来车站接我，我想他肯定早到了！列车终于停了下来，下车后我一眼就看见leo了，身边还有他的一个小伙伴，我不认识，只见他俩都在那瑟瑟发抖，因为天还是有点冷。基友之间无需寒暄，他俩直接拎着我的行李，走出车站，打了个的，直奔万寿路附近的某小区。&lt;/p&gt;

&lt;p&gt;距离很近，10分钟的车程，还没来得及看车外风景就到了，第一次进北京城其实还好吧。咱也是见过世面的人，毕竟也在我大西安呆过几年！下车后，看看周围觉得不是很繁华，就弱弱的问leo，这里不是北京城区吧？他笑说：这还能不算？三环呢，6站地铁就到天安门啦！好吧。辗转几个弯，他俩领我到一个小区，满是高楼，心里想这家伙不错啊，在北京能住这等好小区。到啦，就这！在一排平房处停了下来，进了其中一间平房。房子面积不到20平，一双人床，一桌子，还有几个箱子和一些生活用品。leo 笑说，比较简陋先凑活住吧，过些天咋们再换。其实还好吧，西安不是都这样的房子么？我问这房租怎么算？ 600一个月。这么贵？ 这算便宜的啦。这是我第一次知道帝都的房租这么贵。洗手间在外面，外面有卖饭的，好了，先不说了，你先休息，我去上班了，说完他就出门了。&lt;/p&gt;

&lt;p&gt;好，先美美的睡一觉!&lt;/p&gt;

&lt;p&gt;下篇说第二次搬家……&lt;/p&gt;
</description>
                                <pubDate>Tue, 01 Apr 2014 22:00:00 +0000</pubDate>
                                <link>http://pobing.info//%E6%96%87%E7%AB%A0/2014/04/01/8-5-%E6%90%AC%E5%AE%B6%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B%EF%BC%8D1.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E6%96%87%E7%AB%A0/2014/04/01/8-5-%E6%90%AC%E5%AE%B6%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B%EF%BC%8D1.html</guid>
                        </item>
                
                        <item>
                                <title>8个月5次搬家的心路历程（一）</title>
                                <description>&lt;p&gt;&lt;strong&gt;北漂不易，坚持不易，且行且珍惜。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;北漂&lt;/strong&gt;，不必说工作有多难找，不必说吃饭吃了多少地沟油，不必说早晨是怎么被人推进地铁，更不必说每天吸进去多少雾霾，就单单每次那找房就够让你痛苦的！&lt;/p&gt;

&lt;p&gt;2010年4月来的北京，到年底共搬家5次。搬了5次？吹的吧！吹没吹且看下面：&lt;/p&gt;

&lt;p&gt;故事都是发生在2010年，以下省去年份，内容如有雷同，实属故意。&lt;/p&gt;

&lt;pre&gt;
第一次： 4月初，从西安雁塔区——北京万寿路
第二次： 4月底，万寿路——青塔
第三次： 8月底， 青塔 —— 七里渠南村
第四次： 10月中旬，七里渠南村 —— 青塔
第五次： 11月中旬 青塔 —— 天通苑
&lt;/pre&gt;

&lt;p&gt;有模有样，能记得那么清？编的吧。&lt;/p&gt;

&lt;p&gt;不过我只想说，有些事情真实经历了，触动心灵了，就自然而然的记住了。&lt;/p&gt;

&lt;p&gt;下来就说说第一次搬家：&lt;/p&gt;

&lt;p&gt;4月1日，从古都西安坐上了北上的列车。为什么选择愚人节这天，而且是美丽的四月天？ 哈哈，这并没特殊意义，随机事件，实属巧合。记得那天宿舍5，6个兄弟都来西安车站为我送行，多好的哥们，可惜有几个现在都失联了，有点想念，不知过的都还好？&lt;/p&gt;

&lt;p&gt;坐了一晚上的火车，没吃、没喝、也没上厕所，好像也没睡着。这是因为要去帝都激动的吗？当然不是，也许是因为一个人，胆怯的，或是怕谁把东西拿走了？其实也没什么东西，一个皮箱，一包衣服算是这次搬家的东西。这次搬家东西最少，距离最远。有人会说，这怎么能叫搬家？你说不是就不是吧！&lt;/p&gt;

&lt;p&gt;走之前身边的小伙伴问我，你帝都有熟人么？你一个人都敢去？我笑笑说，北京咱哪有熟人？没什么亲戚，只有一个好基友在北京，本篇以下都用 leo 代替他。为什么叫好基友？因为我们认识15年之久，我去过他家，吃过他妈做的饭，他来过我家，吃过我妈做的饭。而且频率还挺高，我们经常睡同一张床，我穿过他的裤子，他穿过我的外套，你说这样的人能不是基友的 best 级别么？一辈子有这么一个人，值得！不得不说，我现在的生活，有他一大部分的作用。要不是他鼓动我去北京，我现在的生活将会是另一番天地。当然了也不是说我现在生活有多好，只是经过种种觉得没有遗憾！&lt;/p&gt;

&lt;p&gt;撤太远了，还是说搬家吧！&lt;/p&gt;

&lt;p&gt;对，没错，就是 leo 让我来北京的，我这次就是投靠他的。现在问问自己要是没一个熟人到底敢去吗？答案是2个字，敢去！ 这不坐车前他就三番五次的打电话叮嘱我，车上小心，注意安全什么的。好像是哥哥照顾弟弟似的。其实我是哥，因为我比他大一个月，可见他有多么一颗强大而温柔的心。&lt;/p&gt;

&lt;p&gt;列车行驶了12个小时之后，终于在太阳升起的那一刻缓缓驶进北京市区。记得那时天很蓝，楼很高！ leo 说他来车站接我，我想他肯定早到了！列车终于停了下来，下车后我一眼就看见leo了，身边还有他的一个小伙伴，我不认识，只见他俩都在那瑟瑟发抖，因为天还是有点冷。基友之间无需寒暄，他俩直接拎着我的行李，走出车站，打了个的，直奔万寿路附近的某小区。&lt;/p&gt;

&lt;p&gt;距离很近，10分钟的车程，还没来得及看车外风景就到了，第一次进北京城其实还好吧。咱也是见过世面的人，毕竟也在我大西安呆过几年！下车后，看看周围觉得不是很繁华，就弱弱的问leo，这里不是北京城区吧？他笑说：这还能不算？三环呢，6站地铁就到天安门啦！好吧。辗转几个弯，他俩领我到一个小区，满是高楼，心里想这家伙不错啊，在北京能住这等好小区。到啦，就这！在一排平房处停了下来，进了其中一间平房。房子面积不到20平，一双人床，一桌子，还有几个箱子和一些生活用品。leo 笑说，比较简陋先凑活住吧，过些天咋们再换。其实还好吧，西安不是都这样的房子么？我问这房租怎么算？ 600一个月。这么贵？ 这算便宜的啦。这是我第一次知道帝都的房租这么贵。洗手间在外面，外面有卖饭的，好了，先不说了，你先休息，我去上班了，说完他就出门了。&lt;/p&gt;

&lt;p&gt;好，先美美的睡一觉!&lt;/p&gt;

&lt;p&gt;下篇说第二次搬家……&lt;/p&gt;
</description>
                                <pubDate>Tue, 01 Apr 2014 22:00:00 +0000</pubDate>
                                <link>http://pobing.info//stage/2014/04/01/8-5-%E6%90%AC%E5%AE%B6%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B%EF%BC%8D1.html</link>
                                <guid isPermaLink="true">http://pobing.info//stage/2014/04/01/8-5-%E6%90%AC%E5%AE%B6%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B%EF%BC%8D1.html</guid>
                        </item>
                
                        <item>
                                <title>Linux 新服务配置</title>
                                <description>&lt;p&gt;linux 版本 ubuntu12.04 x86&lt;/p&gt;

&lt;p&gt;首次登录：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;ssh root@x.x.x.x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改root用户密码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;passwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建新用户组（admin组）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;addgroup admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;添加新用户：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;useradd -d /home/bill -s /bin/bash -m bill

＃参数d指定用户的主目录，参数s指定用户的shell，参数m表示如果该目录不存在，则创建该目录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置新用户的密码&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;passwd bill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将新用户（bill）添加到用户组（admin）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;usermod -a -G admin bill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为新用户设定权限&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;visudo #visudo命令会打开sudo设置文件/etc/sudoers

root    ALL=(ALL:ALL) ALL
bill    ALL=(ALL:ALL) ALL  #为bill 用户设定 sudo 权限
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改默认服务器 ssh 端口，1025 － 65536 之间的任意整数,我们设置端口 58404&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo cp /etc/ssh/sshd_config ~  # 备份 sshd_config 文件
sudo vi /etc/ssh/sshd_config


Port 58404
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;禁止root 用户登录&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Protocol 2

PermitRootLogin no
PermitEmptyPasswords no
PasswordAuthentication no

RSAAuthentication yes
PubkeyAuthentication yes
AuthorizedKeysFile .ssh/authorized_keys

UseDNS no


sudo  passwd -l root # 禁用 root 账号
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;指定允许登录的用户：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;AllowUsers bill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;改变authorized_keys文件的权限&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo chmod 600 ~/.ssh/authorized_keys &amp;amp;&amp;amp; chmod 700 ~/.ssh/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重启SSHD&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo service ssh restart

//或者

sudo /etc/init.d/ssh restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ruby install&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install curl

curl -L get.rvm.io | bash -s stablesource ~/.rvm/scripts/rvm

rvm requirements

rvm install 2.0
rvm use 2.0
ruby -v
rvm --default use 2.0
gem install rails -v 3.2.16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;apache,mysql,phpmyadmin&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install mysql-server
sudo apt-get install libmysqlclient-dev
mysql_config —socket # config sock
sudo apt-get install apache2
sudo apt-get install phpmyadmin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;git&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git-core
ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;nginx&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;memcached&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install memcached
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;启动服务&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;memcached -d -m 50 -p 11011 -u memcache -l 127.0.0.1

常用memcache启动参数介绍:

-d：以daemon的方式在后台启动运行一个守护进程
-m：分配给Memcache使用的最大内存数量，单位是MB，默认是64MB
-u：设定运行Memcache的用户（memcache默认不允许以root用户登录）
-l：监听的服务器IP地址
-p：设置Memcache监听的TCP端口，默认是11211(p为小写)
-c：设置最大并发连接数，默认是1024
-P：设置保存Memcache的pid文件路径(P为大写)
-h：显示帮助
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;关闭服务&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;kill -9 memcache的进程ID
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mysql create user and Grant Permissions&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;user mysql;
create user &amp;#39;rabel&amp;#39;@&amp;#39;localhost&amp;#39; identified by &amp;#39;password&amp;#39;;
GRANT ALL PRIVILEGES ON db_name. * TO &amp;#39;name&amp;#39;@&amp;#39;localhost&amp;#39;;
FLUSH PRIVILEGES;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其他辅助软件&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install nodejs
sudo apt-get install imagemagick
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ssh 别名登录&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;在本机~/.ssh文件夹下创建config文件，内容如下。

Host s1
HostName 128.199.209.242
User bill
Port 25000

ssh s1 # 新开shell,测试是否可以登录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装终极Shell zsh&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install zsh

wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh

chsh -s /bin/zsh #zsh作为默认shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;参考：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/03/server_setup.html&quot;&gt;Linux服务器的初步配置流程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://spenserj.com/blog/2013/07/15/securing-a-linux-server/&quot;&gt;securing-a-linux-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dhq.me/ubuntu-install-use-memcache&quot;&gt;Ubuntu 12.04 LTS下memcache的安装使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;推荐：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pobing.info/%E6%8A%80%E6%9C%AF/2014/03/30/ssh-%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95.html&quot;&gt;ssh 免密码登录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pobing.info/%E6%8A%80%E6%9C%AF/2014/01/16/%E8%BF%90-git-%E8%A3%B8%E4%BB%93%E5%BA%93%E5%81%9A%E4%BB%A3%E7%A0%81%E9%83%A8%E7%BD%B2.html&quot;&gt;使用 git 裸仓库部署项目&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                                <pubDate>Sun, 30 Mar 2014 22:18:11 +0000</pubDate>
                                <link>http://pobing.info//stage/2014/03/30/Linux-%E6%96%B0%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE.html</link>
                                <guid isPermaLink="true">http://pobing.info//stage/2014/03/30/Linux-%E6%96%B0%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE.html</guid>
                        </item>
                
                        <item>
                                <title>Linux 新服务配置</title>
                                <description>&lt;p&gt;linux 版本 ubuntu12.04 x86&lt;/p&gt;

&lt;p&gt;首次登录：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;ssh root@x.x.x.x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改root用户密码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;passwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建新用户组（admin组）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;addgroup admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;添加新用户：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;useradd -d /home/bill -s /bin/bash -m bill

＃参数d指定用户的主目录，参数s指定用户的shell，参数m表示如果该目录不存在，则创建该目录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;设置新用户的密码&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;passwd bill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将新用户（bill）添加到用户组（admin）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;usermod -a -G admin bill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为新用户设定权限&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;visudo #visudo命令会打开sudo设置文件/etc/sudoers

root    ALL=(ALL:ALL) ALL
bill    ALL=(ALL:ALL) ALL  #为bill 用户设定 sudo 权限
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改默认服务器 ssh 端口，1025 － 65536 之间的任意整数,我们设置端口 58404&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo cp /etc/ssh/sshd_config ~  # 备份 sshd_config 文件
sudo vi /etc/ssh/sshd_config


Port 58404
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;禁止root 用户登录&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Protocol 2

PermitRootLogin no
PermitEmptyPasswords no
PasswordAuthentication no

RSAAuthentication yes
PubkeyAuthentication yes
AuthorizedKeysFile .ssh/authorized_keys

UseDNS no


sudo  passwd -l root # 禁用 root 账号
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;指定允许登录的用户：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;AllowUsers bill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;改变authorized_keys文件的权限&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo chmod 600 ~/.ssh/authorized_keys &amp;amp;&amp;amp; chmod 700 ~/.ssh/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重启SSHD&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo service ssh restart

//或者

sudo /etc/init.d/ssh restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ruby install&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install curl

curl -L get.rvm.io | bash -s stablesource ~/.rvm/scripts/rvm

rvm requirements

rvm install 2.0
rvm use 2.0
ruby -v
rvm --default use 2.0
gem install rails -v 3.2.16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;apache,mysql,phpmyadmin&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install mysql-server
sudo apt-get install libmysqlclient-dev
mysql_config —socket # config sock
sudo apt-get install apache2
sudo apt-get install phpmyadmin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;git&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git-core
ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;nginx&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;memcached&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install memcached
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;启动服务&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;memcached -d -m 50 -p 11011 -u memcache -l 127.0.0.1

常用memcache启动参数介绍:

-d：以daemon的方式在后台启动运行一个守护进程
-m：分配给Memcache使用的最大内存数量，单位是MB，默认是64MB
-u：设定运行Memcache的用户（memcache默认不允许以root用户登录）
-l：监听的服务器IP地址
-p：设置Memcache监听的TCP端口，默认是11211(p为小写)
-c：设置最大并发连接数，默认是1024
-P：设置保存Memcache的pid文件路径(P为大写)
-h：显示帮助
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;关闭服务&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;kill -9 memcache的进程ID
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mysql create user and Grant Permissions&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;user mysql;
create user &amp;#39;rabel&amp;#39;@&amp;#39;localhost&amp;#39; identified by &amp;#39;password&amp;#39;;
GRANT ALL PRIVILEGES ON db_name. * TO &amp;#39;name&amp;#39;@&amp;#39;localhost&amp;#39;;
FLUSH PRIVILEGES;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其他辅助软件&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install nodejs
sudo apt-get install imagemagick
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ssh 别名登录&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;在本机~/.ssh文件夹下创建config文件，内容如下。

Host s1
HostName 128.199.209.242
User bill
Port 25000

ssh s1 # 新开shell,测试是否可以登录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装终极Shell zsh&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install zsh

wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh

chsh -s /bin/zsh #zsh作为默认shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;参考：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/03/server_setup.html&quot;&gt;Linux服务器的初步配置流程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://spenserj.com/blog/2013/07/15/securing-a-linux-server/&quot;&gt;securing-a-linux-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dhq.me/ubuntu-install-use-memcache&quot;&gt;Ubuntu 12.04 LTS下memcache的安装使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;推荐：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pobing.info/%E6%8A%80%E6%9C%AF/2014/03/30/ssh-%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95.html&quot;&gt;ssh 免密码登录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pobing.info/%E6%8A%80%E6%9C%AF/2014/01/16/%E8%BF%90-git-%E8%A3%B8%E4%BB%93%E5%BA%93%E5%81%9A%E4%BB%A3%E7%A0%81%E9%83%A8%E7%BD%B2.html&quot;&gt;使用 git 裸仓库部署项目&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                                <pubDate>Sun, 30 Mar 2014 22:18:11 +0000</pubDate>
                                <link>http://pobing.info//%E6%8A%80%E6%9C%AF/2014/03/30/Linux-%E6%96%B0%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E6%8A%80%E6%9C%AF/2014/03/30/Linux-%E6%96%B0%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE.html</guid>
                        </item>
                
                        <item>
                                <title>ssh 免密码登录远程机器</title>
                                <description>&lt;p&gt;假设 A为本地主机(即用于控制其他主机的机器), B为远程主机(即被控制的机器Server), ip为192.168.10.105; 前提是两台机器都是Linux系统
这里不做 ssh 的 id_rsa.pub 的生成&lt;/p&gt;

&lt;p&gt;将本地 ~/.ssh/id_rsa.pub 拷贝到要登录的机器B机器，执行以下命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo scp /home/a/.ssh/id_rsa.pub b@192.168.10.105:/home/b/.ssh/a_id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;B机把从A机复制的id&lt;em&gt;rsa.pub添加到.ssh/authorzied&lt;/em&gt;keys文件里&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;touch /root/.ssh/authorized_keys (如果已经存在这个文件, 跳过这条)
cat ~/.ssh/jdd_id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys

# 将id_rsa.pub的内容追加到 authorized_keys 中, 注意不要用 &amp;gt; ，否则会清空原有的内容，使其他人无法使用原有的密钥登录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改 authorized_keys 文件权限：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;chmod 600 ~/.ssh/authorized_keys


 # 必须将~/.ssh/authorized_keys的权限改为600, 该文件用于保存ssh客户端生成的公钥，可以修改服务器的ssh服务端配置文件/etc/ssh/sshd_config来指定其他文件名
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;测试：A机器执行&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;ssh b@192.168.10.105
scp something b@192.168.10.105:/home/b/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上都不需要输入密码能成功操作，说明配置OK！&lt;/p&gt;

&lt;p&gt;参考：&lt;a href=&quot;http://my.oschina.net/aiguozhe/blog/33994&quot;&gt;http://my.oschina.net/aiguozhe/blog/33994&lt;/a&gt;&lt;/p&gt;
</description>
                                <pubDate>Sun, 30 Mar 2014 22:13:55 +0000</pubDate>
                                <link>http://pobing.info//%E6%8A%80%E6%9C%AF/2014/03/30/ssh-%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95.html</link>
                                <guid isPermaLink="true">http://pobing.info//%E6%8A%80%E6%9C%AF/2014/03/30/ssh-%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95.html</guid>
                        </item>
                
                        <item>
                                <title>ssh 免密码登录远程机器</title>
                                <description>&lt;p&gt;假设 A为本地主机(即用于控制其他主机的机器), B为远程主机(即被控制的机器Server), ip为192.168.10.105; 前提是两台机器都是Linux系统
这里不做 ssh 的 id_rsa.pub 的生成&lt;/p&gt;

&lt;p&gt;将本地 ~/.ssh/id_rsa.pub 拷贝到要登录的机器B机器，执行以下命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo scp /home/a/.ssh/id_rsa.pub b@192.168.10.105:/home/b/.ssh/a_id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;B机把从A机复制的id&lt;em&gt;rsa.pub添加到.ssh/authorzied&lt;/em&gt;keys文件里&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;touch /root/.ssh/authorized_keys (如果已经存在这个文件, 跳过这条)
cat ~/.ssh/jdd_id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys

# 将id_rsa.pub的内容追加到 authorized_keys 中, 注意不要用 &amp;gt; ，否则会清空原有的内容，使其他人无法使用原有的密钥登录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改 authorized_keys 文件权限：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;chmod 600 ~/.ssh/authorized_keys


 # 必须将~/.ssh/authorized_keys的权限改为600, 该文件用于保存ssh客户端生成的公钥，可以修改服务器的ssh服务端配置文件/etc/ssh/sshd_config来指定其他文件名
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;测试：A机器执行&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;ssh b@192.168.10.105
scp something b@192.168.10.105:/home/b/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上都不需要输入密码能成功操作，说明配置OK！&lt;/p&gt;

&lt;p&gt;参考：&lt;a href=&quot;http://my.oschina.net/aiguozhe/blog/33994&quot;&gt;http://my.oschina.net/aiguozhe/blog/33994&lt;/a&gt;&lt;/p&gt;
</description>
                                <pubDate>Sun, 30 Mar 2014 22:13:55 +0000</pubDate>
                                <link>http://pobing.info//stage/2014/03/30/ssh-%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95.html</link>
                                <guid isPermaLink="true">http://pobing.info//stage/2014/03/30/ssh-%E5%85%8D%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95.html</guid>
                        </item>
                
        </channel>
</rss>